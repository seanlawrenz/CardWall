.animated {
  animation-duration: 1s;
  animation-fill-mode: both;
}

.animated.infinite {
  animation-iteration-count: infinite;
}

.animated.hinge {
  animation-duration: 2s;
}

.animated.flipOutX,
.animated.flipOutY,
.animated.bounceIn,
.animated.bounceOut {
  animation-duration: .75s;
}

/*
* Loading animation for the edit card dialog
*/

.loading-dialog-container {
  width: 100%;
  height: 300px;
}

%loading-borders-constructor {
  position: absolute;
  top: 50%;
  left: 50%;
  display: inline-block;
  box-sizing: inherit;
  border-radius: 50%;
  border: .05em solid $bootstrapBlue;
  border-top-color: transparent;
  border-bottom-color: transparent;
  background-color: transparent;
}

.td {

  /*
  * Loading animation
  */

  &-icon {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;

    font-size: 16px;
    font-family: 'WebComponentsIcons';
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    speak: none;
    text-transform: none;
    text-decoration: none;

    display: inline-block;
    vertical-align: middle;
    top: 50%;
    left: 50%;

    &::before {
      vertical-align: baseline;
    }
  }

  &-loading {
    color: currentColor;
    position: relative;
    background-color: transparent;
    box-sizing: border-box;

    &::before {
      content: "";
      margin-top: -4em;
      margin-left: -4em;
      width: 8em;
      height: 8em;
      animation: td-loading-animation reverse .7s linear infinite;

      @extend %loading-borders-constructor;

    }

    &::after {
      content: "";
      margin-top: -2em;
      margin-left: -2em;
      width: 4em;
      height: 4em;
      animation: td-loading-animation reverse 2s linear infinite;

      @extend %loading-borders-constructor;
    }

    // Smaller loader
    &-sm {
      color: currentColor;
      position: relative;
      background-color: transparent;
      box-sizing: border-box;

      &::before {
        content: '';
        margin-top: -2em;
        margin-left: -3em;
        width: 4em;
        height: 4em;
        animation: td-loading-animation reverse .7s linear infinite;

        @extend %loading-borders-constructor;
      }

      &::after {
        content: '';
        margin-top: -1em;
        margin-left: -2em;
        width: 2em;
        height: 2em;

        animation: td-loading-animation reverse 2s linear infinite;

        @extend %loading-borders-constructor;
      }
    }

    &-overlay {
      background: rgba(0, 0, 0, 0.3);
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 2000;
    }

  }

  /*
  *Sliding Animations
  */

  &-slideInRight {
    animation-name: slideInRight;
  }


  /*
  * Panel that is sliding in styles
  */
  &-sliding-in-panel {
    position: absolute;
    z-index: 2000;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background: #fff;
    border-radius: 6px;
  }
}

.tdNg-loading-component-container {
  position: fixed;
  z-index: 99;
  background: rgba(0,0,0,0.2);
  width: 100%;
  height: 100%;
}

// Loading keyframe

@keyframes td-loading-animation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// SlideInRight

@keyframes slideInRight {
  from {
    transform: translate3d(100%, 0 ,0);
    visibility: visible;
  }

  to {
    transform: translate3d(0 ,0, 0);
  }
}
